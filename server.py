from flask import Flask, request, jsonify
from telegram import Bot, Update
from telegram.ext import CommandHandler, MessageHandler, filters, ApplicationBuilder
import os
import asyncio

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –ü—Ä–∏–º–µ—Ä API: –∫–æ—Ä–µ–Ω—å
@app.route("/")
def index():
    return "Server and bot are running!"

# –ü—Ä–∏–º–µ—Ä API: –ø—Ä–∏—ë–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
@app.route("/booking", methods=["POST"])
def booking():
    data = request.json
    print("Booking received:", data)
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –±–∞–∑—É, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É –∏ —Ç.–¥.
    return jsonify({"status": "ok"})

# Telegram-–±–æ—Ç
async def start(update: Update, context):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç UnrealPlace üëæ")

async def echo(update: Update, context):
    await update.message.reply_text(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {update.message.text}")

def start_bot():
    app_bot = ApplicationBuilder().token(TOKEN).build()
    app_bot.add_handler(CommandHandler("start", start))
    app_bot.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))
    print("Telegram bot is running...")
    app_bot.run_polling()

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏ Flask, –∏ Telegram-–±–æ—Ç–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
if __name__ == "__main__":
    import threading

    bot_thread = threading.Thread(target=start_bot)
    bot_thread.start()

    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
